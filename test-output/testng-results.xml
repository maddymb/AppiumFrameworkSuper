<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="4" passed="1">
  <reporter-output>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/Android_Nexus/2020-07-14-12-05-40/LoginTest/incorrectLoginTest.png'> <img src='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/Android_Nexus/2020-07-14-12-05-40/LoginTest/incorrectLoginTest.png' height='400' width='400'/> </a>]]>
    </line>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/iOS_iPhone 11/2020-07-14-12-05-40/LoginTest/correctLoginTest.png'> <img src='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/iOS_iPhone 11/2020-07-14-12-05-40/LoginTest/correctLoginTest.png' height='400' width='400'/> </a>]]>
    </line>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/iOS_iPhone 11/2020-07-14-12-05-40/LoginTest/incorrectLoginTest.png'> <img src='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/iOS_iPhone 11/2020-07-14-12-05-40/LoginTest/incorrectLoginTest.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="176405" started-at="2020-07-14T06:35:40Z" finished-at="2020-07-14T06:38:36Z">
    <groups>
    </groups>
    <test name="Android" duration-ms="78517" started-at="2020-07-14T06:35:40Z" finished-at="2020-07-14T06:36:59Z">
      <class name="com.appium.tests.LoginTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.appium.tests.LoginTest@80503]" name="setUp" is-config="true" duration-ms="29137" started-at="2020-07-14T06:35:40Z" finished-at="2020-07-14T06:36:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8.0.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Nexus]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[11000]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.appium.tests.LoginTest@80503]" name="beforeClass" is-config="true" duration-ms="10427" started-at="2020-07-14T06:36:09Z" finished-at="2020-07-14T06:36:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="superBefore()[pri:0, instance:com.appium.tests.LoginTest@80503]" name="superBefore" is-config="true" duration-ms="1254" started-at="2020-07-14T06:36:20Z" finished-at="2020-07-14T06:36:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superBefore -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.appium.tests.LoginTest@80503]" name="before" is-config="true" duration-ms="383" started-at="2020-07-14T06:36:21Z" finished-at="2020-07-14T06:36:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="correctLoginTest()[pri:0, instance:com.appium.tests.LoginTest@80503]" name="correctLoginTest" duration-ms="17228" started-at="2020-07-14T06:36:21Z" finished-at="2020-07-14T06:36:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctLoginTest -->
        <test-method status="PASS" signature="superAfter(org.testng.ITestResult)[pri:0, instance:com.appium.tests.LoginTest@80503]" name="superAfter" is-config="true" duration-ms="2057" started-at="2020-07-14T06:36:39Z" finished-at="2020-07-14T06:36:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=correctLoginTest status=SUCCESS method=LoginTest.correctLoginTest()[pri:0, instance:com.appium.tests.LoginTest@80503] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superAfter -->
        <test-method status="PASS" signature="superBefore()[pri:0, instance:com.appium.tests.LoginTest@80503]" name="superBefore" is-config="true" duration-ms="710" started-at="2020-07-14T06:36:41Z" finished-at="2020-07-14T06:36:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superBefore -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.appium.tests.LoginTest@80503]" name="before" is-config="true" duration-ms="1" started-at="2020-07-14T06:36:41Z" finished-at="2020-07-14T06:36:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="incorrectLoginTest()[pri:0, instance:com.appium.tests.LoginTest@80503]" name="incorrectLoginTest" duration-ms="11139" started-at="2020-07-14T06:36:41Z" finished-at="2020-07-14T06:36:52Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Located by By.chained({By.AccessibilityId: test-Username}) (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Located by By.chained({By.AccessibilityId: test-Username}) (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.appium.base.TestBase.waitForVisibility(TestBase.java:223)
at com.appium.base.TestBase.sendKeys(TestBase.java:233)
at com.appium.pages.LoginPage.enterUserName(LoginPage.java:24)
at com.appium.tests.LoginTest.incorrectLoginTest(LoginTest.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.AccessibilityId: test-Username})
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.isDisplayed(<generated>)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 24 more
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@1a4362bf (tried for 1 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:304)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
... 31 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.AccessibilityId: test-Username})
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Madhurs-MacBook-Air.local', ip: 'fe80:0:0:0:f1:975e:11f1:92c6%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.2', java.version: '1.8.0_191'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 33 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/Android_Nexus/2020-07-14-12-05-40/LoginTest/incorrectLoginTest.png'> <img src='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/Android_Nexus/2020-07-14-12-05-40/LoginTest/incorrectLoginTest.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- incorrectLoginTest -->
        <test-method status="PASS" signature="superAfter(org.testng.ITestResult)[pri:0, instance:com.appium.tests.LoginTest@80503]" name="superAfter" is-config="true" duration-ms="853" started-at="2020-07-14T06:36:55Z" finished-at="2020-07-14T06:36:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=incorrectLoginTest status=FAILURE method=LoginTest.incorrectLoginTest()[pri:0, instance:com.appium.tests.LoginTest@80503] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superAfter -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.appium.tests.LoginTest@80503]" name="tearDown" is-config="true" duration-ms="2991" started-at="2020-07-14T06:36:56Z" finished-at="2020-07-14T06:36:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.appium.tests.LoginTest -->
    </test> <!-- Android -->
    <test name="iOS " duration-ms="176405" started-at="2020-07-14T06:35:40Z" finished-at="2020-07-14T06:38:36Z">
      <class name="com.appium.tests.LoginTest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="setUp" is-config="true" duration-ms="124042" started-at="2020-07-14T06:35:40Z" finished-at="2020-07-14T06:37:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[13.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[iPhone 11]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[androidOnly]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[androidOnly]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[10001]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[11001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="beforeClass" is-config="true" duration-ms="10716" started-at="2020-07-14T06:37:44Z" finished-at="2020-07-14T06:37:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="superBefore()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="superBefore" is-config="true" duration-ms="1245" started-at="2020-07-14T06:37:55Z" finished-at="2020-07-14T06:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superBefore -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="before" is-config="true" duration-ms="44" started-at="2020-07-14T06:37:56Z" finished-at="2020-07-14T06:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="correctLoginTest()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="correctLoginTest" duration-ms="23229" started-at="2020-07-14T06:37:56Z" finished-at="2020-07-14T06:38:19Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: The attribute 'text' is unknown. Valid attribute names are: (
    UID,
    accessibilityContainer,
    accessible,
    enabled,
    frame,
    label,
    name,
    rect,
    selected,
    type,
    value,
    visible,
    wdAccessibilityContainer,
    wdAccessible,
    wdEnabled,
    wdFrame,
    wdLabel,
    wdName,
    wdRect,
    wdSelected,
    wdType,
    wdUID,
    wdValue,
    wdVisible
)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Madhurs-MacBook-Air.local', ip: 'fe80:0:0:0:f1:975e:11f1:92c6%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.2', java.version: '1.8.0_191'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {app: /Users/maddy/eclipse-worksp..., automationName: XCUITest, browserName: , databaseEnabled: false, deviceName: iPhone 11, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, platform: MAC, platformName: iOS, platformVersion: 13.5, takesScreenshot: true, udid: CC66683A-2B0A-43C7-A91D-EBB..., wdaLocalPort: 10001, webStorageEnabled: false, webkitDebugProxyPort: 11001}
Session ID: 965a5be4-ddcc-4481-8e8b-96a956672974]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: The attribute 'text' is unknown. Valid attribute names are: (
    UID,
    accessibilityContainer,
    accessible,
    enabled,
    frame,
    label,
    name,
    rect,
    selected,
    type,
    value,
    visible,
    wdAccessibilityContainer,
    wdAccessible,
    wdEnabled,
    wdFrame,
    wdLabel,
    wdName,
    wdRect,
    wdSelected,
    wdType,
    wdUID,
    wdValue,
    wdVisible
)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Madhurs-MacBook-Air.local', ip: 'fe80:0:0:0:f1:975e:11f1:92c6%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.2', java.version: '1.8.0_191'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {app: /Users/maddy/eclipse-worksp..., automationName: XCUITest, browserName: , databaseEnabled: false, deviceName: iPhone 11, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, platform: MAC, platformName: iOS, platformVersion: 13.5, takesScreenshot: true, udid: CC66683A-2B0A-43C7-A91D-EBB..., wdaLocalPort: 10001, webStorageEnabled: false, webkitDebugProxyPort: 11001}
Session ID: 965a5be4-ddcc-4481-8e8b-96a956672974
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at io.appium.java_client.DefaultGenericMobileElement.execute(DefaultGenericMobileElement.java:45)
at io.appium.java_client.MobileElement.execute(MobileElement.java:1)
at io.appium.java_client.ios.IOSElement.execute(IOSElement.java:1)
at org.openqa.selenium.remote.RemoteWebElement.getAttribute(RemoteWebElement.java:134)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at io.appium.java_client.pagefactory.ElementInterceptor.getObject(ElementInterceptor.java:40)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:60)
at io.appium.java_client.ios.IOSElement$$EnhancerByCGLIB$$d311658.getAttribute(<generated>)
at com.appium.base.TestBase.getAttribute(TestBase.java:240)
at com.appium.pages.ProductsPage.getProductsTitle(ProductsPage.java:20)
at com.appium.tests.LoginTest.correctLoginTest(LoginTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/iOS_iPhone 11/2020-07-14-12-05-40/LoginTest/correctLoginTest.png'> <img src='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/iOS_iPhone 11/2020-07-14-12-05-40/LoginTest/correctLoginTest.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- correctLoginTest -->
        <test-method status="PASS" signature="superAfter(org.testng.ITestResult)[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="superAfter" is-config="true" duration-ms="1459" started-at="2020-07-14T06:38:20Z" finished-at="2020-07-14T06:38:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=correctLoginTest status=FAILURE method=LoginTest.correctLoginTest()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superAfter -->
        <test-method status="PASS" signature="superBefore()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="superBefore" is-config="true" duration-ms="1248" started-at="2020-07-14T06:38:22Z" finished-at="2020-07-14T06:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superBefore -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="before" is-config="true" duration-ms="2" started-at="2020-07-14T06:38:23Z" finished-at="2020-07-14T06:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="incorrectLoginTest()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="incorrectLoginTest" duration-ms="10964" started-at="2020-07-14T06:38:23Z" finished-at="2020-07-14T06:38:34Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Located by By.chained({By.id: test-Username}) (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Located by By.chained({By.id: test-Username}) (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.appium.base.TestBase.waitForVisibility(TestBase.java:223)
at com.appium.base.TestBase.sendKeys(TestBase.java:233)
at com.appium.pages.LoginPage.enterUserName(LoginPage.java:24)
at com.appium.tests.LoginTest.incorrectLoginTest(LoginTest.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.id: test-Username})
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
at io.appium.java_client.ios.IOSElement$$EnhancerByCGLIB$$d311658.isDisplayed(<generated>)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 24 more
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@6af69106 (tried for 1 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:304)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
... 31 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.id: test-Username})
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Madhurs-MacBook-Air.local', ip: 'fe80:0:0:0:f1:975e:11f1:92c6%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.2', java.version: '1.8.0_191'
Driver info: driver.version: IOSDriver
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 33 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/iOS_iPhone 11/2020-07-14-12-05-40/LoginTest/incorrectLoginTest.png'> <img src='/Users/maddy/eclipse-workspace/AppiumFrameworkSuper/Screenshots/iOS_iPhone 11/2020-07-14-12-05-40/LoginTest/incorrectLoginTest.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- incorrectLoginTest -->
        <test-method status="PASS" signature="superAfter(org.testng.ITestResult)[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="superAfter" is-config="true" duration-ms="769" started-at="2020-07-14T06:38:35Z" finished-at="2020-07-14T06:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=incorrectLoginTest status=FAILURE method=LoginTest.incorrectLoginTest()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- superAfter -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.appium.tests.LoginTest@23d2a7e8]" name="tearDown" is-config="true" duration-ms="1081" started-at="2020-07-14T06:38:35Z" finished-at="2020-07-14T06:38:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.appium.tests.LoginTest -->
    </test> <!-- iOS  -->
  </suite> <!-- Suite -->
</testng-results>
